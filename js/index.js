import { getAllRecipes, deleteRecipe } from "./db.js";

document.addEventListener("DOMContentLoaded", async () => {
	const recipeList = document.querySelector("#recipe-list .container");
	const searchInput = document.getElementById("search-input");
	const mealTypeFilter = document.getElementById("meal-type-filter");
	const dishTypeFilter = document.getElementById("dish-type-filter");
	const sortFilter = document.getElementById("sort-filter");

	let recipes = await getAllRecipes(); // –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ —Ä–µ—Ü–µ–ø—Ç—ã

	// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ—Ü–µ–ø—Ç–æ–≤ —Å —É—á–µ—Ç–æ–º —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
	function renderRecipes() {
		let filteredRecipes = [...recipes];

		// –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –ø—Ä–∏–µ–º—É –ø–∏—â–∏
		const selectedMealType = mealTypeFilter.value;
		if (selectedMealType) {
			filteredRecipes = filteredRecipes.filter(recipe => recipe.mealTypes.includes(selectedMealType));
		}

		// –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Ç–∏–ø—É –±–ª—é–¥–∞
		const selectedDishType = dishTypeFilter.value;
		if (selectedDishType) {
			filteredRecipes = filteredRecipes.filter(recipe => recipe.dishType === selectedDishType);
		}

		// –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
		const searchQuery = searchInput.value.toLowerCase();
		if (searchQuery) {
			filteredRecipes = filteredRecipes.filter(recipe => recipe.title.toLowerCase().includes(searchQuery));
		}

		// –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞
		const selectedSort = sortFilter.value;
		if (selectedSort === "a-z") {
			filteredRecipes.sort((a, b) => a.title.localeCompare(b.title));
		} else if (selectedSort === "z-a") {
			filteredRecipes.sort((a, b) => b.title.localeCompare(a.title));
		} else if (selectedSort === "newest") {
			filteredRecipes.sort((a, b) => new Date(b.dateAdded) - new Date(a.dateAdded));
		} else if (selectedSort === "oldest") {
			filteredRecipes.sort((a, b) => new Date(a.dateAdded) - new Date(b.dateAdded));
		}

		// –û—á–∏—â–∞–µ–º —Å–ø–∏—Å–æ–∫ –∏ —Ä–µ–Ω–¥–µ—Ä–∏–º –∑–∞–Ω–æ–≤–æ
		recipeList.innerHTML = "";
		if (filteredRecipes.length === 0) {
			recipeList.innerHTML = "<p>–ù–µ—Ç —Ä–µ—Ü–µ–ø—Ç–æ–≤, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö —Ñ–∏–ª—å—Ç—Ä–∞–º.</p>";
			return;
		}

		filteredRecipes.forEach((recipe) => {
			const recipeItem = document.createElement("div");
			recipeItem.classList.add("recipe-card");

			// –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
			const imageContainer = document.createElement("div");
			imageContainer.classList.add("recipe-image-container");
			const image = document.createElement("img");
			image.src = recipe.imagePreview || 'assets/img/default.jpg';
			image.alt = "–§–æ—Ç–æ —Ä–µ—Ü–µ–ø—Ç–∞";
			imageContainer.appendChild(image);

			// –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
			const infoContainer = document.createElement("div");
			infoContainer.classList.add("recipe-info-container");
			infoContainer.innerHTML = `
                <h2>${recipe.title}</h2>
                <p>${recipe.description}</p>
								<div class="recipe-dish-icon">${getDishTypeIcon(recipe.dishType)}</div>
                <div class="recipe-buttons">
                    <button class="open-recipe" data-id="${recipe.id}">üìñ –û—Ç–∫—Ä—ã—Ç—å</button>
                    <button class="delete-recipe" data-id="${recipe.id}">üóë –£–¥–∞–ª–∏—Ç—å</button>
                </div>
            `;

			// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã—Å–æ—Ç—É –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
			image.onload = () => {
				let imageHeight = image.height;
				if (imageHeight > window.innerHeight * 0.3) {
					imageHeight = window.innerHeight * 0.3;
				}
				image.style.height = `${imageHeight}px`;
				infoContainer.style.height = `${imageHeight}px`;
			};

			recipeItem.appendChild(imageContainer);
			recipeItem.appendChild(infoContainer);
			recipeList.appendChild(recipeItem);
		});

		// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ "–û—Ç–∫—Ä—ã—Ç—å" –∏ "–£–¥–∞–ª–∏—Ç—å"
		document.querySelectorAll(".open-recipe").forEach((button) => {
			button.addEventListener("click", (event) => {
				const id = event.target.getAttribute("data-id");
				window.location.href = `recipe.html?id=${id}`;
			});
		});

		document.querySelectorAll(".delete-recipe").forEach((button) => {
			button.addEventListener("click", async (event) => {
				const id = event.target.getAttribute("data-id");
				if (confirm("–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç —Ä–µ—Ü–µ–ø—Ç?")) {
					await deleteRecipe(id);
					recipes = await getAllRecipes(); // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è
					renderRecipes(); // –ü–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º —Ä–µ—Ü–µ–ø—Ç—ã
				}
			});
		});
	}

	// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∫–æ–Ω–∫–∏ —Ç–∏–ø–∞ –±–ª—é–¥–∞ —Å –ø–æ–¥—Å–∫–∞–∑–∫–æ–π
	function getDishTypeIcon(dishType) {
		const icon = dishType === "diet" ? "üçè" : "üçî";
		const tooltip = dishType === "diet" ? "–î–∏–µ—Ç–∏—á–µ—Å–∫–æ–µ –±–ª—é–¥–æ" : "–û–±—ã—á–Ω–æ–µ –±–ª—é–¥–æ";
		return `<span class="recipe-dish-icon" title="${tooltip}">${icon}</span>`;
	}


	// –í—ã–∑–æ–≤ —Ä–µ–Ω–¥–µ—Ä–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
	renderRecipes();

	// –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
	searchInput.addEventListener("input", renderRecipes);
	mealTypeFilter.addEventListener("change", renderRecipes);
	dishTypeFilter.addEventListener("change", renderRecipes);
	sortFilter.addEventListener("change", renderRecipes);
});

// –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º Service Worker
if ("serviceWorker" in navigator) {
	navigator.serviceWorker.register("/service-worker.js")
		.then(() => console.log("‚úÖ Service Worker –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!"))
		.catch((error) => console.log("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ SW:", error));
}
